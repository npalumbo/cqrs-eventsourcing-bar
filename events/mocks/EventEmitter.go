// Code generated by mockery v2.49.0. DO NOT EDIT.

package mocks

import (
	events "golangsevillabar/events"

	mock "github.com/stretchr/testify/mock"
)

// EventEmitter is an autogenerated mock type for the EventEmitter type
type EventEmitter[E events.Event] struct {
	mock.Mock
}

// EmitEvent provides a mock function with given fields: event
func (_m *EventEmitter[E]) EmitEvent(event E) {
	_m.Called(event)
}

// NewEventEmitter creates a new instance of EventEmitter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEventEmitter[E events.Event](t interface {
	mock.TestingT
	Cleanup(func())
}) *EventEmitter[E] {
	mock := &EventEmitter[E]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
