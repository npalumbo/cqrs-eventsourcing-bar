// Code generated by mockery v2.49.0. DO NOT EDIT.

package mocks

import (
	context "context"
	commands "golangsevillabar/commands"

	mock "github.com/stretchr/testify/mock"
)

// CommandDispatcher is an autogenerated mock type for the CommandDispatcher type
type CommandDispatcher struct {
	mock.Mock
}

// DispatchCommand provides a mock function with given fields: ctx, command
func (_m *CommandDispatcher) DispatchCommand(ctx context.Context, command commands.Command) error {
	ret := _m.Called(ctx, command)

	if len(ret) == 0 {
		panic("no return value specified for DispatchCommand")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, commands.Command) error); ok {
		r0 = rf(ctx, command)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCommandDispatcher creates a new instance of CommandDispatcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCommandDispatcher(t interface {
	mock.TestingT
	Cleanup(func())
}) *CommandDispatcher {
	mock := &CommandDispatcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
